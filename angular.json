{
  "$schema": "./node_modules/@angular/cli/lib/config/schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "backoffice_ecommerce": {
      "projectType": "application",
      "schematics": {},
      "root": "",
      "sourceRoot": "src",
      "prefix": "app",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/backoffice_ecommerce",
            "index": "src/index.html",
            "main": "src/main.ts",
            "polyfills": [
              "zone.js"
            ],
            "tsConfig": "tsconfig.app.json",
            "assets": [
              "src/favicon.ico",
              "src/assets"
            ],
            "styles": [
              "node_modules/bootstrap/dist/css/bootstrap.min.css",
              "src/styles.css"

            ],
            "scripts": [
              "node_modules/jquery/dist/jquery.min.js",
              "src/assets/css/popper.min.js",
              "node_modules/bootstrap/dist/js/bootstrap.min.js"
            ]
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "outputHashing": "all",

              "fileReplacements": [
          {
            "replace": "src/environments/environment.ts",
            "with": "src/environments/environment.prod.ts"
          }
        ]
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true,
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.development.ts"
                }
              ]
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "backoffice_ecommerce:build:production"
            },
            "development": {
              "browserTarget": "backoffice_ecommerce:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "backoffice_ecommerce:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "polyfills": [
              "zone.js",
              "zone.js/testing"
            ],
            "tsConfig": "tsconfig.spec.json",
            "assets": [
              "src/favicon.ico",
              "src/assets"
            ],
            "styles": [
              "src/styles.css"
            ],
            "scripts": []
          }
        }
      }
    }
  },
  "cli": {
    "analytics": "d7a3ad8b-52ad-4ef4-bca5-e80b0b235b76"
  }
}

// Pour installer bootstrap "npm i bootstrap" et pour intégration du bootstrap je dois faire les configuartion au niveau
//de Angular.json donc on va au node_modules apres bootstrap apres dist apres css apres boostrap.min.css avec clique droit sur
//boostrap.min.css copy relative path et on va copier et mettre dans les styles aussi la meme chose pour  le bootsrap .min.js qu'on va copier
//dans le script
//ensuite on install jquery et apres pour le popper on sur bootsrap  puis doc puis clique et"accéder au fichier" puis l'enregistrer ensuite le copier dans assets/css puis ouvrir et faire copy
//relative path et le mettre dans le script dans angular.json

// Remarque a chaque fois qu'on modifie ou on ajoute dans angular.json il faut stopper et redémarer le serveur*/


/*
// pour faire aussi les configuration de l'environement on a génerer un environement avec la commande
//" ng generate environement " puis on a ajoute un urlApi: localhost:3000 du backend apres on a fait les modification sur
// la partie configuration(developement, production) avec les remplacement ramener du site "generate env angular" dependant
//aussi de des deux fichiers (developement, prod)*/
